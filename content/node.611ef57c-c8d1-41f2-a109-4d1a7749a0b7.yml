uuid:
  - value: 611ef57c-c8d1-41f2-a109-4d1a7749a0b7
langcode:
  - value: en
type:
  - target_id: book
    target_type: node_type
    target_uuid: 870f5e4b-075f-48ba-972b-7b47064b4efd
revision_timestamp:
  - value: '2018-06-17T06:14:56+00:00'
    format: 'Y-m-d\TH:i:sP'
revision_uid:
  - target_type: user
    target_uuid: ed803c7d-e897-4ebb-99a7-1de7754316c4
revision_log: {  }
status:
  - value: true
uid:
  - target_type: user
    target_uuid: ed803c7d-e897-4ebb-99a7-1de7754316c4
title:
  - value: 'Module compatibility'
created:
  - value: '2018-06-17T06:14:32+00:00'
    format: 'Y-m-d\TH:i:sP'
changed:
  - value: '2019-02-13T15:03:12+00:00'
    format: 'Y-m-d\TH:i:sP'
promote:
  - value: false
sticky:
  - value: false
default_langcode:
  - value: true
revision_translation_affected:
  - value: true
path:
  - alias: /docs/module-compatibility
    langcode: en
body:
  - value: |
      <p>This project has not been tested with every contributed module, but this page will categorize ones that are known to have problems</p>

      <ul>
      	<li><strong>Views&nbsp;</strong>- Publicly accessible exposed forms, contextual filters (using query params), and AJAX does not work with Tome, since there is no Drupal site running to support them. Pagers on non-AJAX forms are supported, with some magic.</li>
      	<li><strong>Search</strong>&nbsp;- Search API and most search modules rely on a Drupal backend to find a deliver results, and as such they are not compatible with Tome. For basic, free&nbsp;search functionality it's recommended that you use <a href="https://www.drupal.org/project/lunr">Lunr search</a>, a Drupal module that creates a JSON index of your content based on a View, and does search client-side.</li>
      	<li><strong>Most forms</strong>&nbsp;- You should not expect any publicly accessible form to work on your static site. It's static HTML, there's nowhere to POST! ðŸ˜„It's recommended that these dynamic elements are moved to a PaaS service or DIY serverless function. If you use Netlify, the <a href="https://www.drupal.org/project/tome_netlify">Tome Netlify</a>&nbsp;module will let you submit core Contact Forms to Netlify with minimal setup.</li>
      	<li><strong>Paragraphs&nbsp;</strong>- When a Paragraph is removed from a field, it is never actually deleted. This can lead to a lot of stale entities in&nbsp; your repository, which you would normally have to manually clean up. The "Paragraphs Clean" contributed module will delete Paragraphs when they are unreferenced. I use it on this site and it seems to work OK.</li>
      </ul>
    format: rich_text
    summary: 'Find out what modules are compatible with Tome.'
